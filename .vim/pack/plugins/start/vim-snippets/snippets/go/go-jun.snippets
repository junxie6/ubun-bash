snippet demosrv "web server demo code"
	package main

	import (
		"fmt"
		"net/http"
	)

	func srvHome(w http.ResponseWriter, r *http.Request) {
		fmt.Fprintf(w, "Hi there, I love %s!", r.URL.Path[1:])
		//w.Write([]byte("Hello"))
	}

	func main() {
		http.HandleFunc("/", srvHome)

		http.ListenAndServe(":8080", nil)
		//http.ListenAndServeTLS(":8443", "example.crt", "example.key", nil)
	}

snippet demogin "Gin demo code"
	package main

	import (
		"github.com/gin-gonic/gin"
	)

	func main() {
		r := gin.Default()

		r.GET("/ping", func(c *gin.Context) {
			c.JSON(200, gin.H{
				"message": "pong",
			})
		})

		r.Run() // listen and serve on 0.0.0.0:8080
		//r.RunTLS(":8080", "mydomain.crt", "mydomain.key")
	}

snippet initerr "Initialize err"
	var err error

snippet pe "fmt.Printf()"
	fmt.Printf("Error: %s\n", err.Error())

snippet he "Error handling"
	if v, err = ${1}; err != nil {
		fmt.Printf("Error: %s\n", err.Error())
		return err
	}

snippet mi "map[string]interface{}"
	map[string]interface{}
